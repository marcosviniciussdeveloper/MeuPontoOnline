// <auto-generated />
using System;
using MeuPontoOnline.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeuPontoOnline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250330163919_Primary")]
    partial class Primary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeuPontoOnline.Models.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("funcoes");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIndetificacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_indetificacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("integer")
                        .HasColumnName("funcao_id");

                    b.Property<TimeSpan>("HorarioEntrada")
                        .HasColumnType("interval")
                        .HasColumnName("horario_entrada");

                    b.Property<TimeSpan>("HorarioSaida")
                        .HasColumnType("interval")
                        .HasColumnName("horario_saida");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha_hash");

                    b.Property<int>("SetorId")
                        .HasColumnType("integer")
                        .HasColumnName("setor_id");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_contrato");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("SetorId");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.RegistroPonto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_hora");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer")
                        .HasColumnName("funcioario_id");

                    b.Property<string>("Observacao")
                        .HasColumnType("text")
                        .HasColumnName("Observacao");

                    b.Property<string>("TipoRegistro")
                        .HasColumnType("text")
                        .HasColumnName("tipo_registro");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("registro_ponto");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("setores");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.Funcionario", b =>
                {
                    b.HasOne("MeuPontoOnline.Models.Funcao", "Funcao")
                        .WithMany("Funcionarios")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeuPontoOnline.Models.Setor", "Setor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.RegistroPonto", b =>
                {
                    b.HasOne("MeuPontoOnline.Models.Funcionario", "Fucionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fucionario");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.Funcao", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("MeuPontoOnline.Models.Setor", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
